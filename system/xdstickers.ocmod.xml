<?xml version="1.0" encoding="utf-8"?>
<modification>
	<name>XD Stickers for ocStore 3.x</name>
	<code>9638944144</code>
	<version>2.0</version>
	<author><![CDATA[<span style="color:#0066cc"><b>XDomus.ru</b></span>]]></author>
	<link>//xdomus.ru/opencart/modul-stikery-dlya-opencart-besplatno/</link>
	<file path="admin/model/catalog/product.php">
		<operation>
			<search>
				<![CDATA[
					$this->cache->delete('product');
				]]>
			</search>
			<add position="before">
				<![CDATA[
					// XD Stickers start
					$this->db->query("DELETE FROM " . DB_PREFIX . "xdstickers_product WHERE product_id = " . (int)$product_id);
					if (isset($data['xdstickers'])) {
						foreach ($data['xdstickers'] as $xdsticker) {
							$this->db->query("INSERT INTO " . DB_PREFIX . "xdstickers_product SET product_id = " . (int)$product_id . ", xdsticker_id = ".(int)$xdsticker['xdsticker_id']);
						}
					}
					// XD Stickers end
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/controller/catalog/product.php">
		<operation>
			<search>
				<![CDATA[
					$data['layouts'] = $this->model_design_layout->getLayouts();
				]]>
			</search>
			<add position="after">
				<![CDATA[
					// XD Stickers start
					$this->load->language('catalog/product');
					$data['heading_title'] = $this->language->get('heading_title');

					$this->load->language('extension/module/xdstickers');
					$this->load->model('extension/module/xdstickers');
					$data['xdstickers_product'] = array();
					$data['tab_xdstickers'] = $this->language->get('tab_xdstickers');
					$data['entry_xdstickers'] = $this->language->get('entry_xdstickers');
					$data['xdstickers'] = $this->model_extension_module_xdstickers->getCustomXDStickers();
					if (isset($this->request->post['product_layout'])) {
						$data['xdstickers_product'] = $this->request->post['xdstickers'];
					} elseif (isset($this->request->get['product_id'])) {
						$xdstickers_products = array();
						$xdstickers_products = $this->model_extension_module_xdstickers->getCustomXDStickersProduct($this->request->get['product_id']);
						foreach ($xdstickers_products as $xdstickers_product) {
							$data['xdstickers_product'][] = $xdstickers_product['xdsticker_id'];
						}
					} else {
						$data['xdstickers_product'] = array();
					}
					// XD Stickers end
				]]>
			</add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_form.twig">
		<operation>
			<search>
				<![CDATA[
					<li><a href="#tab-design" data-toggle="tab">{{ tab_design }}</a></li>
				]]>
			</search>
			<add position="after">
				<![CDATA[
					<!-- XD Stickers start -->
						<li><a href="#tab-xdstickers" data-toggle="tab">{{ tab_xdstickers }}</a></li>
					<!-- XD Stickers start -->
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[
					<div class="tab-pane" id="tab-design">
				]]>
			</search>
			<add position="before"><![CDATA[
				<!-- XD Stickers start -->
				<div class="tab-pane" id="tab-xdstickers">
					<div class="table-responsive">
						<div class="form-group" style="margin: 0px">
							<label class="col-sm-2 control-label" for="input-xdstickers">{{ entry_xdstickers }}</label>
							<div class="col-sm-10">
								<div class="well well-sm" style="height: 150px; overflow: auto;">
									{% for xdsticker in xdstickers %}
										<div class="checkbox">
											<label>
												<input type="checkbox" name="xdstickers[{{xdsticker.xdsticker_id}}][xdsticker_id]" value="{{xdsticker.xdsticker_id}}"{% if xdsticker.xdsticker_id in xdstickers_product %} checked="checked"{% endif %} /> {{xdsticker.name}}
											</label>
										</div>
									{% endfor %}
								</div>
							</div>
						</div>
					</div>
				</div>
				<!-- XD Stickers start -->
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/common/header.php">
		<operation>
			<search>
				<![CDATA[
					public function index() {
				]]>
			</search>
			<add position="after">
				<![CDATA[
					// XD Stickers start
						$this->load->model('setting/setting');
						$xdstickers = $this->config->get('xdstickers');
						$data['xdstickers_status'] = $this->config->get('module_xdstickers_status');
						if ($data['xdstickers_status']) {
                            $this->document->addStyle('catalog/view/theme/default/stylesheet/xdstickers.css');

							$data['xdstickers'] = array();
							$data['xdstickers_position'] = $xdstickers['position'];
							$data['xdstickers_inline_styles'] = $xdstickers['inline_styles'];
							$data['xdstickers'][] = array(
								'id'			=> 'xdsticker_sale',
								'bg'			=> $xdstickers['sale']['bg'],
								'color'			=> $xdstickers['sale']['color'],
								'status'		=> isset($xdstickers['sale']['status']) && boolval($xdstickers['sale']['status']) ? '1' : '0',
							);
							$data['xdstickers'][] = array(
								'id'			=> 'xdsticker_bestseller',
								'bg'			=> $xdstickers['bestseller']['bg'],
								'color'			=> $xdstickers['bestseller']['color'],
								'status'		=> isset($xdstickers['bestseller']['status']) && boolval($xdstickers['bestseller']['status']) ? '1' : '0',
							);
							$data['xdstickers'][] = array(
								'id'			=> 'xdsticker_viewed',
								'bg'			=> $xdstickers['viewed']['bg'],
								'color'			=> $xdstickers['viewed']['color'],
								'status'		=> isset($xdstickers['viewed']['status']) && boolval($xdstickers['viewed']['status']) ? '1' : '0',
							);
							$data['xdstickers'][] = array(
								'id'			=> 'xdsticker_novelty',
								'bg'			=> $xdstickers['novelty']['bg'],
								'color'			=> $xdstickers['novelty']['color'],
								'status'		=> isset($xdstickers['novelty']['status']) && boolval($xdstickers['novelty']['status']) ? '1' : '0',
							);
							$data['xdstickers'][] = array(
								'id'			=> 'xdsticker_last',
								'bg'			=> $xdstickers['last']['bg'],
								'color'			=> $xdstickers['last']['color'],
								'status'		=> isset($xdstickers['last']['status']) && boolval($xdstickers['last']['status']) ? '1' : '0',
							);
							$data['xdstickers'][] = array(
								'id'			=> 'xdsticker_freeshipping',
								'bg'			=> $xdstickers['freeshipping']['bg'],
								'color'			=> $xdstickers['freeshipping']['color'],
								'status'		=> isset($xdstickers['freeshipping']['status']) && boolval($xdstickers['freeshipping']['status']) ? '1' : '0',
							);

							if (isset($xdstickers['stock']) && !empty($xdstickers['stock'])) {
								foreach($xdstickers['stock'] as $key => $value) {
									if (isset($value['status']) && $value['status'] == '1') {
										$data['xdstickers'][] = array(
											'id'			=> 'xdsticker_stock_' . $key,
											'bg'			=> $value['bg'],
											'color'			=> $value['color'],
											'status'		=> isset($value['status']) && boolval($value['status']) ? '1' : '0',
										);
									}
								}
							}

							// CUSTOM stickers
							$this->load->model('extension/module/xdstickers');
							$custom_xdstickers = $this->model_extension_module_xdstickers->getCustomXDStickers();
							if (!empty($custom_xdstickers)) {
								foreach ($custom_xdstickers as $custom_xdsticker) {
									$custom_sticker_id = 'xdsticker_' . $custom_xdsticker['xdsticker_id'];
									$data['xdstickers'][] = array(
										'id'			=> $custom_sticker_id,
										'bg'			=> $custom_xdsticker['bg_color'],
										'color'			=> $custom_xdsticker['color_color'],
										'status'		=> isset($custom_xdsticker['status']) && boolval($custom_xdsticker['status']) ? '1' : '0',
									);
								}
							}
						}
					// XD Stickers end
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/common/header.twig">
		<operation>
			<search>
				<![CDATA[
					</head>
				]]>
			</search>
			<add position="before">
				<![CDATA[
					<!-- XD stickers start -->
					{% if xdstickers is defined %}
						{% if xdstickers is not empty %}
							<style type='text/css'>
                                {{xdstickers_inline_styles}}
                                {% for xdsticker in xdstickers %}
                                    {% if xdsticker.status == '1' %}
                                        .{{xdsticker.id}} {
                                            background-color:{{ xdsticker.bg }};
                                            color:{{ xdsticker.color }};
                                        }
                                    {% endif %}
                                {% endfor %}
							</style>
						{% endif %}
					{% endif %}
					<!-- XD stickers end -->
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/model/catalog/product.php">
		<operation>
			<search>
				<![CDATA[
					'stock_status'	 => $query->row['stock_status'],
				]]>
			</search>
			<add position="after">
				<![CDATA[
					'stock_status_id'	 => $query->row['stock_status_id'],
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/product/product.php">
		<operation>
			<search>
				<![CDATA[
					$data['products'] = array();
				]]>
			</search>
			<add position="before">
				<![CDATA[
					// XD Stickers start
						$this->load->model('setting/setting');
						$xdstickers = $this->config->get('xdstickers');
						$current_language_id = $this->config->get('config_language_id');
						$data['xdstickers'] = array();
						$data['xdstickers_position'] = ($xdstickers['position'] == '0') ? ' position_upleft' : ' position_upright';
						$data['xdstickers_status'] = $this->config->get('module_xdstickers_status');
						if ($data['xdstickers_status']) {
							$data['xdstickers'] = array();
							if (isset($xdstickers['sale']['status']) && boolval($xdstickers['sale']['status']) && $data['special']) {
								if (isset($xdstickers['sale']['discount_status']) && boolval($xdstickers['sale']['discount_status'])) {
									$sale_value = ceil((floatval($product_info['price']) - floatval($product_info['special'])) / (floatval($product_info['price']) * 0.01));
									$sale_text = $xdstickers['sale']['text'][$current_language_id] . ' -' . strval($sale_value) . '%';
								} else {
									$sale_text = $xdstickers['sale']['text'][$current_language_id];
								}
								$data['xdstickers'][] = array(
									'id'			=> 'xdsticker_sale',
									'text'			=> $sale_text,
                                    'tooltip'		=> htmlspecialchars_decode($xdstickers['sale']['tooltip'][$current_language_id])
								);
							}
							if ($xdstickers['bestseller']['status'] == '1') {
								$bestsellers = $this->model_catalog_product->getBestSellerProducts((int)$xdstickers['bestseller']['property']);
								foreach ($bestsellers as $bestseller) {
									if ($bestseller['product_id'] == $this->request->get['product_id']) {
										$data['xdstickers'][] = array(
											'id'			=> 'xdsticker_bestseller',
											'text'			=> $xdstickers['bestseller']['text'][$current_language_id]
										);
									}
								}
							}
							if(isset($product_info['viewed'])) {
								if ($xdstickers['viewed']['status'] == '1') {
									if ($product_info['viewed'] >= intval($xdstickers['viewed']['property'])) {
										$data['xdstickers'][] = array(
											'id'			=> 'xdsticker_viewed',
											'text'			=> $xdstickers['viewed']['text'][$current_language_id]
										);
									}
								}
							}
							if ($xdstickers['novelty']['status'] == '1') {
								if ((strtotime($product_info['date_added']) + intval($xdstickers['novelty']['property']) * 24 * 3600) > time()) {
									$data['xdstickers'][] = array(
										'id'			=> 'xdsticker_novelty',
										'text'			=> $xdstickers['novelty']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['last']['status'] == '1') {
								if ($product_info['quantity'] <= intval($xdstickers['last']['property']) && $product_info['quantity'] > 0) {
									$data['xdstickers'][] = array(
										'id'			=> 'xdsticker_last',
										'text'			=> $xdstickers['last']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['freeshipping']['status'] == '1') {
								if(isset($product_info['special']) && $product_info['special'] !== null) {
									if (floatval($product_info['special']) >= intval($xdstickers['freeshipping']['property'])) {
										$data['xdstickers'][] = array(
											'id'			=> 'xdsticker_freeshipping',
											'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
										);
									}
								} else if (floatval($product_info['price']) >= intval($xdstickers['freeshipping']['property'])) {
									$data['xdstickers'][] = array(
										'id'			=> 'xdsticker_freeshipping',
										'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
									);
								}
							}

							// STOCK stickers
							if (isset($xdstickers['stock']) && !empty($xdstickers['stock'])) {
								foreach($xdstickers['stock'] as $key => $value) {
									if (isset($value['status']) && $value['status'] == '1' && $key == $product_info['stock_status_id'] && $product_info['quantity'] <= 0) {
										$data['xdstickers'][] = array(
											'id'			=> 'xdsticker_stock_' . $key,
											'text'			=> $product_info['stock_status']
										);
									}
								}
							}

							// CUSTOM stickers
							$this->load->model('extension/module/xdstickers');
							$custom_xdstickers_id = $this->model_extension_module_xdstickers->getCustomXDStickersProduct($this->request->get['product_id']);
							if (!empty($custom_xdstickers_id)) {
								foreach ($custom_xdstickers_id as $custom_xdsticker_id) {
									$custom_xdsticker = $this->model_extension_module_xdstickers->getCustomXDSticker($custom_xdsticker_id['xdsticker_id']);
									if (isset($custom_xdsticker) && !empty($custom_xdsticker)) {
										$custom_xdsticker_text = json_decode($custom_xdsticker['text'], true);
									}
									if (isset($custom_xdsticker) && !empty($custom_xdsticker) && $custom_xdsticker['status'] == '1') {
										$custom_sticker_class = 'xdsticker_' . $custom_xdsticker_id['xdsticker_id'];
										$data['xdstickers'][] = array(
											'id'			=> $custom_sticker_class,
											'text'			=> $custom_xdsticker_text[$current_language_id]
										);
									}
								}
							}
						}
					// XD Stickers end
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="before">
				<![CDATA[
					// XD Stickers start
						$product_xdstickers = array();
						if ($data['xdstickers_status']) {
							if(isset($result['special'])) {
								if ($xdstickers['sale']['status'] == '1' && $special) {
									if ($xdstickers['sale']['discount_status'] == '1') {
										$sale_value = ceil((floatval($result['price']) - floatval($result['special'])) / (floatval($result['price']) * 0.01));
										$sale_text = $xdstickers['sale']['text'][$current_language_id] . ' -' . strval($sale_value) . '%';
									} else {
										$sale_text = $xdstickers['sale']['text'][$current_language_id];
									}
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_sale',
										'text'			=> $sale_text,
                                        'tooltip'		=> htmlspecialchars_decode($xdstickers['sale']['tooltip'][$current_language_id])
									);
								}
							}
							if ($xdstickers['bestseller']['status'] == '1') {
								$bestsellers = $this->model_catalog_product->getBestSellerProducts((int)$xdstickers['bestseller']['property']);
								foreach ($bestsellers as $bestseller) {
									if ($bestseller['product_id'] == $result['product_id']) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_bestseller',
											'text'			=> $xdstickers['bestseller']['text'][$current_language_id]
										);
									}
								}
							}
							if(isset($result['viewed'])) {
								if ($xdstickers['viewed']['status'] == '1') {
									if ($result['viewed'] >= intval($xdstickers['viewed']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_viewed',
											'text'			=> $xdstickers['viewed']['text'][$current_language_id]
										);
									}
								}
							}
							if ($xdstickers['novelty']['status'] == '1') {
								if ((strtotime($result['date_added']) + intval($xdstickers['novelty']['property']) * 24 * 3600) > time()) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_novelty',
										'text'			=> $xdstickers['novelty']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['last']['status'] == '1') {
								if ($result['quantity'] <= intval($xdstickers['last']['property']) && $result['quantity'] > 0) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_last',
										'text'			=> $xdstickers['last']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['freeshipping']['status'] == '1') {
								if(isset($result['special']) && $result['special'] !== null) {
									if (floatval($result['special']) >= intval($xdstickers['freeshipping']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_freeshipping',
											'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
										);
									}
								} else if (floatval($result['price']) >= intval($xdstickers['freeshipping']['property'])) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_freeshipping',
										'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
									);
								}
							}

							// STOCK stickers
							if (isset($xdstickers['stock']) && !empty($xdstickers['stock'])) {
								foreach($xdstickers['stock'] as $key => $value) {
									if (isset($value['status']) && $value['status'] == '1' && $key == $result['stock_status_id'] && $result['quantity'] <= 0) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_stock_' . $key,
											'text'			=> $result['stock_status']
										);
									}
								}
							}

							// CUSTOM stickers
							$this->load->model('extension/module/xdstickers');
							$custom_xdstickers_id = $this->model_extension_module_xdstickers->getCustomXDStickersProduct($result['product_id']);
							if (!empty($custom_xdstickers_id)) {
								foreach ($custom_xdstickers_id as $custom_xdsticker_id) {
									$custom_xdsticker = $this->model_extension_module_xdstickers->getCustomXDSticker($custom_xdsticker_id['xdsticker_id']);
									if (isset($custom_xdsticker) && !empty($custom_xdsticker)) {
										$custom_xdsticker_text = json_decode($custom_xdsticker['text'], true);
									}
									if (isset($custom_xdsticker) && !empty($custom_xdsticker) && $custom_xdsticker['status'] == '1') {
										$custom_sticker_class = 'xdsticker_' . $custom_xdsticker_id['xdsticker_id'];
										$product_xdstickers[] = array(
											'id'			=> $custom_sticker_class,
											'text'			=> $custom_xdsticker_text[$current_language_id]
										);
									}
								}
							}
						}
					// XD Stickers end
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="after">
				<![CDATA[
					'product_xdstickers'  => $product_xdstickers,
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/product/product.twig">
		<operation>
			<search>
				<![CDATA[
					<div class="{{ class }}"> {% if thumb or images %}
				]]>
			</search>
			<add position="after">
				<![CDATA[
					<!-- XD stickers start -->
					{% if xdstickers is defined %}
						{% if xdstickers is not empty %}
						<div class="xdstickers_wrapper {{xdstickers_position}}">
							{% for xdsticker in xdstickers %}
                                {% if xdsticker.tooltip is defined %} 
                                    <div class="dropdown2 xdstickers">
                                        <span class="{{xdsticker.id}} dropdown-toggle">
                                            {{ xdsticker.text }}
                                        </span>
                                        <div class="dropdown-menu">
                                            <div class="xdsticker_tooltip">
                                                {{ xdsticker.tooltip }}
                                            </div>
                                        </div>
                                    </div>
                                {% else %}
                                    <div class="{{xdsticker.id}} xdstickers">
                                        {{ xdsticker.text }}
                                    </div>
                                {% endif %}
							{% endfor %}
						</div>
						{% endif %}
					{% endif %}
					<!-- XD stickers end -->
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[
					<a href="{{ product.href }}"><img src="{{ product.thumb }}" alt="{{ product.name }}" title="{{ product.name }}" class="img-responsive" /></a>
				]]>
			</search>
			<add position="before">
				<![CDATA[
					<!-- XD stickers start -->
					{% if product.product_xdstickers is defined %}
						{% if product.product_xdstickers is not empty %}
						<div class="xdstickers_wrapper {{xdstickers_position}}">
							{% for xdsticker in product.product_xdstickers %}
								<div class="{{xdsticker.id}} xdstickers">
									{{xdsticker.text}}
								</div>
							{% endfor %}
						</div>
						{% endif %}
					{% endif %}
					<!-- XD stickers end -->
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/product/{category.php,manufacturer.php,special.php,search.php}">
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="before">
				<![CDATA[
					// XD Stickers start
						$this->load->model('setting/setting');
						$xdstickers = $this->config->get('xdstickers');
						$current_language_id = $this->config->get('config_language_id');
						$product_xdstickers = array();
						$data['xdstickers_position'] = ($xdstickers['position'] == '0') ? ' position_upleft' : ' position_upright';
						$data['xdstickers_status'] = $this->config->get('module_xdstickers_status');
						if ($data['xdstickers_status']) {
							if(isset($result['special'])) {
								if ($xdstickers['sale']['status'] == '1' && $special) {
									if ($xdstickers['sale']['discount_status'] == '1') {
										$sale_value = ceil((floatval($result['price']) - floatval($result['special'])) / (floatval($result['price']) * 0.01));
										$sale_text = $xdstickers['sale']['text'][$current_language_id] . ' -' . strval($sale_value) . '%';
									} else {
										$sale_text = $xdstickers['sale']['text'][$current_language_id];
									}
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_sale',
										'text'			=> $sale_text
									);
								}
							}
							if ($xdstickers['bestseller']['status'] == '1') {
								$bestsellers = $this->model_catalog_product->getBestSellerProducts((int)$xdstickers['bestseller']['property']);
								foreach ($bestsellers as $bestseller) {
									if ($bestseller['product_id'] == $result['product_id']) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_bestseller',
											'text'			=> $xdstickers['bestseller']['text'][$current_language_id]
										);
									}
								}
							}
							if(isset($result['viewed'])){
								if ($xdstickers['viewed']['status'] == '1') {
									if ($result['viewed'] >= intval($xdstickers['viewed']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_viewed',
											'text'			=> $xdstickers['viewed']['text'][$current_language_id]
										);
									}
								}							
							}
							if ($xdstickers['novelty']['status'] == '1') {
								if ((strtotime($result['date_added']) + intval($xdstickers['novelty']['property']) * 24 * 3600) > time()) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_novelty',
										'text'			=> $xdstickers['novelty']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['last']['status'] == '1') {
								if ($result['quantity'] <= intval($xdstickers['last']['property']) && $result['quantity'] > 0) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_last',
										'text'			=> $xdstickers['last']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['freeshipping']['status'] == '1') {
								if(isset($result['special']) && $result['special'] !== null) {
									if (floatval($result['special']) >= intval($xdstickers['freeshipping']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_freeshipping',
											'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
										);
									}
								} else if (floatval($result['price']) >= intval($xdstickers['freeshipping']['property'])) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_freeshipping',
										'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
									);
								}
							}

							// STOCK stickers
							if (isset($xdstickers['stock']) && !empty($xdstickers['stock'])) {
								foreach($xdstickers['stock'] as $key => $value) {
									if (isset($value['status']) && $value['status'] == '1' && $key == $result['stock_status_id'] && $result['quantity'] <= 0) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_stock_' . $key,
											'text'			=> $result['stock_status']
										);
									}
								}
							}

							// CUSTOM stickers
							$this->load->model('extension/module/xdstickers');
							$custom_xdstickers_id = $this->model_extension_module_xdstickers->getCustomXDStickersProduct($result['product_id']);
							if (!empty($custom_xdstickers_id)) {
								foreach ($custom_xdstickers_id as $custom_xdsticker_id) {
									$custom_xdsticker = $this->model_extension_module_xdstickers->getCustomXDSticker($custom_xdsticker_id['xdsticker_id']);
									if (isset($custom_xdsticker) && !empty($custom_xdsticker)) {
										$custom_xdsticker_text = json_decode($custom_xdsticker['text'], true);
									}
									if (isset($custom_xdsticker) && !empty($custom_xdsticker) && $custom_xdsticker['status'] == '1') {
										$custom_sticker_class = 'xdsticker_' . $custom_xdsticker_id['xdsticker_id'];
										$product_xdstickers[] = array(
											'id'			=> $custom_sticker_class,
											'text'			=> $custom_xdsticker_text[$current_language_id]
										);
									}
								}
							}
						}
					// XD Stickers end
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="after">
				<![CDATA[
					'product_xdstickers'  => $product_xdstickers,
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/product/{category.twig,manufacturer_info.twig,special.twig,search.twig}">
		<operation>
			<search>
				<![CDATA[
					<a href="{{ product.href }}"><img src="{{ product.thumb }}" alt="{{ product.name }}" title="{{ product.name }}" class="img-responsive" />
				]]>
			</search>
			<add position="before">
				<![CDATA[
					<!-- XD stickers start -->
					{% if product.product_xdstickers is defined %}
						{% if product.product_xdstickers is not empty %}
						<div class="xdstickers_wrapper {{xdstickers_position}}">
							{% for xdsticker in product.product_xdstickers %}
								<div class="{{xdsticker.id}} xdstickers">
									{{xdsticker.text}}
								</div>
							{% endfor %}
						</div>
						{% endif %}
					{% endif %}
					<!-- XD stickers end -->
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/{bestseller.php,latest.php,special.php}">
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="before">
				<![CDATA[
					// XD Stickers start
						$this->load->model('setting/setting');
						$xdstickers = $this->config->get('xdstickers');
						$current_language_id = $this->config->get('config_language_id');
						$product_xdstickers = array();
						$data['xdstickers_position'] = ($xdstickers['position'] == '0') ? ' position_upleft' : ' position_upright';
						$data['xdstickers_status'] = $this->config->get('module_xdstickers_status');
						if ($data['xdstickers_status']) {
							if(isset($result['special'])) {
								if ($xdstickers['sale']['status'] == '1' && $special) {
									if ($xdstickers['sale']['discount_status'] == '1') {
										$sale_value = ceil((floatval($result['price']) - floatval($result['special'])) / (floatval($result['price']) * 0.01));
										$sale_text = $xdstickers['sale']['text'][$current_language_id] . ' -' . strval($sale_value) . '%';
									} else {
										$sale_text = $xdstickers['sale']['text'][$current_language_id];
									}
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_sale',
										'text'			=> $sale_text
									);
								}
							}
							if ($xdstickers['bestseller']['status'] == '1') {
								$bestsellers = $this->model_catalog_product->getBestSellerProducts((int)$xdstickers['bestseller']['property']);
								foreach ($bestsellers as $bestseller) {
									if ($bestseller['product_id'] == $result['product_id']) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_bestseller',
											'text'			=> $xdstickers['bestseller']['text'][$current_language_id]
										);
									}
								}
							}
							if(isset($result['viewed'])) {
								if ($xdstickers['viewed']['status'] == '1') {
									if ($result['viewed'] >= intval($xdstickers['viewed']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_viewed',
											'text'			=> $xdstickers['viewed']['text'][$current_language_id]
										);
									}
								}							
							}
							if ($xdstickers['novelty']['status'] == '1') {
								if ((strtotime($result['date_added']) + intval($xdstickers['novelty']['property']) * 24 * 3600) > time()) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_novelty',
										'text'			=> $xdstickers['novelty']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['last']['status'] == '1') {
								if ($result['quantity'] <= intval($xdstickers['last']['property']) && $result['quantity'] > 0) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_last',
										'text'			=> $xdstickers['last']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['freeshipping']['status'] == '1') {
								if(isset($result['special']) && $result['special'] !== null) {
									if (floatval($result['special']) >= intval($xdstickers['freeshipping']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_freeshipping',
											'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
										);
									}
								} else if (floatval($result['price']) >= intval($xdstickers['freeshipping']['property'])) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_freeshipping',
										'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
									);
								}
							}

							// STOCK stickers
							if (isset($xdstickers['stock']) && !empty($xdstickers['stock'])) {
								foreach($xdstickers['stock'] as $key => $value) {
									if (isset($value['status']) && $value['status'] == '1' && $key == $result['stock_status_id'] && $result['quantity'] <= 0) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_stock_' . $key,
											'text'			=> $result['stock_status']
										);
									}
								}
							}

							// CUSTOM stickers
							$this->load->model('extension/module/xdstickers');
							$custom_xdstickers_id = $this->model_extension_module_xdstickers->getCustomXDStickersProduct($result['product_id']);
							if (!empty($custom_xdstickers_id)) {
								foreach ($custom_xdstickers_id as $custom_xdsticker_id) {
									$custom_xdsticker = $this->model_extension_module_xdstickers->getCustomXDSticker($custom_xdsticker_id['xdsticker_id']);
									if (isset($custom_xdsticker) && !empty($custom_xdsticker)) {
										$custom_xdsticker_text = json_decode($custom_xdsticker['text'], true);
									}
									if (isset($custom_xdsticker) && !empty($custom_xdsticker) && $custom_xdsticker['status'] == '1') {
										$custom_sticker_class = 'xdsticker_' . $custom_xdsticker_id['xdsticker_id'];
										$product_xdstickers[] = array(
											'id'			=> $custom_sticker_class,
											'text'			=> $custom_xdsticker_text[$current_language_id]
										);
									}
								}
							}
						}
					// XD Stickers end
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="after">
				<![CDATA[
					'product_xdstickers'  => $product_xdstickers,
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/featured.php">
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="before">
				<![CDATA[
					// XD Stickers start
						$this->load->model('setting/setting');
						$xdstickers = $this->config->get('xdstickers');
						$current_language_id = $this->config->get('config_language_id');
						$product_xdstickers = array();
						$data['xdstickers_position'] = ($xdstickers['position'] == '0') ? ' position_upleft' : ' position_upright';
						$data['xdstickers_status'] = $this->config->get('module_xdstickers_status');
						if ($data['xdstickers_status']) {
							if ($xdstickers['sale']['status'] == '1' && $special) {
								if(isset($product_info['special'])) {
									if ($xdstickers['sale']['discount_status'] == '1') {
										$sale_value = ceil((floatval($product_info['price']) - floatval($product_info['special'])) / (floatval($product_info['price']) * 0.01));
										$sale_text = $xdstickers['sale']['text'][$current_language_id] . ' -' . strval($sale_value) . '%';
									} else {
										$sale_text = $xdstickers['sale']['text'][$current_language_id];
									}								
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_sale',
										'text'			=> $sale_text
									);
								}
							}
							if ($xdstickers['bestseller']['status'] == '1') {
								$bestsellers = $this->model_catalog_product->getBestSellerProducts((int)$xdstickers['bestseller']['property']);
								foreach ($bestsellers as $bestseller) {
									if ($bestseller['product_id'] == $product_info['product_id']) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_bestseller',
											'text'			=> $xdstickers['bestseller']['text'][$current_language_id]
										);
									}
								}
							}
							if(isset($product_info['viewed'])) {
								if ($xdstickers['viewed']['status'] == '1') {
									if ($product_info['viewed'] >= intval($xdstickers['viewed']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_viewed',
											'text'			=> $xdstickers['viewed']['text'][$current_language_id]
										);
									}
								}					
							}		
							if ($xdstickers['novelty']['status'] == '1') {
								if ((strtotime($product_info['date_added']) + intval($xdstickers['novelty']['property']) * 24 * 3600) > time()) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_novelty',
										'text'			=> $xdstickers['novelty']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['last']['status'] == '1') {
								if ($product_info['quantity'] <= intval($xdstickers['last']['property']) && $product_info['quantity'] > 0) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_last',
										'text'			=> $xdstickers['last']['text'][$current_language_id]
									);
								}
							}
							if ($xdstickers['freeshipping']['status'] == '1') {
								if(isset($product_info['special']) && $product_info['special'] !== null) {
									if (floatval($product_info['special']) >= intval($xdstickers['freeshipping']['property'])) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_freeshipping',
											'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
										);
									}
								} else if (floatval($product_info['price']) >= intval($xdstickers['freeshipping']['property'])) {
									$product_xdstickers[] = array(
										'id'			=> 'xdsticker_freeshipping',
										'text'			=> $xdstickers['freeshipping']['text'][$current_language_id]
									);
								}
							}

							// STOCK stickers
							if (isset($xdstickers['stock']) && !empty($xdstickers['stock'])) {
								foreach($xdstickers['stock'] as $key => $value) {
									if (isset($value['status']) && $value['status'] == '1' && $key == $product_info['stock_status_id'] && $product_info['quantity'] <= 0) {
										$product_xdstickers[] = array(
											'id'			=> 'xdsticker_stock_' . $key,
											'text'			=> $product_info['stock_status']
										);
									}
								}
							}

							// CUSTOM stickers
							$this->load->model('extension/module/xdstickers');
							$custom_xdstickers_id = $this->model_extension_module_xdstickers->getCustomXDStickersProduct($product_info['product_id']);
							if (!empty($custom_xdstickers_id)) {
								foreach ($custom_xdstickers_id as $custom_xdsticker_id) {
									$custom_xdsticker = $this->model_extension_module_xdstickers->getCustomXDSticker($custom_xdsticker_id['xdsticker_id']);
									if (isset($custom_xdsticker) && !empty($custom_xdsticker)) {
										$custom_xdsticker_text = json_decode($custom_xdsticker['text'], true);
									}
									if (isset($custom_xdsticker) && !empty($custom_xdsticker) && $custom_xdsticker['status'] == '1') {
										$custom_sticker_class = 'xdsticker_' . $custom_xdsticker_id['xdsticker_id'];
										$product_xdstickers[] = array(
											'id'			=> $custom_sticker_class,
											'text'			=> $custom_xdsticker_text[$current_language_id]
										);
									}
								}
							}
						}
					// XD Stickers end
				]]>
			</add>
		</operation>
		<operation>
			<search>
				<![CDATA[
					$data['products'][] = array(
				]]>
			</search>
			<add position="after">
				<![CDATA[
					'product_xdstickers'  => $product_xdstickers,
				]]>
			</add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/extension/module/{bestseller.twig,latest.twig,special.twig,featured.twig}">
		<operation>
			<search>
				<![CDATA[
					<a href="{{ product.href }}"><img src="{{ product.thumb }}" alt="{{ product.name }}" title="{{ product.name }}" class="img-responsive" />
				]]>
			</search>
			<add position="before">
				<![CDATA[
					<!-- XD stickers start -->
					{% if product.product_xdstickers is defined %}
						{% if product.product_xdstickers is not empty %}
						<div class="xdstickers_wrapper {{xdstickers_position}}">
							{% for xdsticker in product.product_xdstickers %}
								<div class="{{xdsticker.id}} xdstickers">
									{{xdsticker.text}}
								</div>
							{% endfor %}
						</div>
						{% endif %}
					{% endif %}
					<!-- XD stickers end -->
				]]>
			</add>
		</operation>
	</file>
</modification>